name: CD

on:
  workflow_dispatch:
    inputs:
      update_daily_run_image:
        description: "update daily-run test image"
        type: boolean
        default: false
      update_cn_image:
        description: create a PR to update CN image
        type: boolean
        default: false

jobs:
  build-arm64:
    name: Build ARM64 Image
    runs-on: arm64
    timeout-minutes: 180
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
          ref: ${{ github.event.inputs.branch }}
          token: ${{ secrets.GIT_ACTION_BOT }}
          fetch-depth: 0
      - name: Login to Harbor
        uses: docker/login-action@v3
        with:
          registry: hub.pingcap.net
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_TOKEN }}
      - name: Build and Push Images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: release-centos7-llvm/dockerfiles/Dockerfile-tiflash-cse-multiarch
          platforms: "linux/arm64"
          push: true
          tags: hub.pingcap.net/sunxiaoguang/serverless/tiflash:${{ github.sha }}-arm64
  build-amd64:
    name: Build AMD64 Image
    runs-on: amd64
    timeout-minutes: 180
    outputs:
      image: tiflash-cse:${{ github.sha }}-amd64
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
          ref: ${{ github.event.inputs.branch }}
          token: ${{ secrets.GIT_ACTION_BOT }}
          fetch-depth: 0
      - name: Login to Harbor
        uses: docker/login-action@v3
        with:
          registry: hub.pingcap.net
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_TOKEN }}
      - name: Build and Push Images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: release-centos7-llvm/dockerfiles/Dockerfile-tiflash-cse-multiarch
          platforms: "linux/amd64"
          push: true
          tags: hub.pingcap.net/sunxiaoguang/serverless/tiflash:${{ github.sha }}-amd64
  multi-arch:
    name: Create Multi-Architecture Image
    runs-on: amd64
    needs: ["build-arm64", "build-amd64"]
    steps:
      - name: Login to Harbor
        uses: docker/login-action@v3
        with:
          registry: hub.pingcap.net
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_TOKEN }}
      - name: create-manifest harbor
        run: |
          docker manifest create hub.pingcap.net/sunxiaoguang/serverless/tiflash:${{ github.sha }} \
          --amend hub.pingcap.net/sunxiaoguang/serverless/tiflash:${{ github.sha }}-amd64 \
          --amend hub.pingcap.net/sunxiaoguang/serverless/tiflash:${{ github.sha }}-arm64
      - name: push-manifest harbor
        run: |
          docker manifest push hub.pingcap.net/sunxiaoguang/serverless/tiflash:${{ github.sha }}
      - name: Login to Harbor (keyspace)
        if: ${{ inputs.update_daily_run_image }}
        uses: docker/login-action@v3
        with:
          registry: hub.pingcap.net
          username: "robot$keyspace+cdbot"
          password: ${{ secrets.HARBOR_KEYSPACE_TOKEN }}
      - name: set-additional-tags
        if: ${{ inputs.update_daily_run_image }}
        run: |
          # Remove the local manifest entry if it exists
          docker manifest rm hub.pingcap.net/keyspace/tiflash:v7.5.0 || true

          docker manifest create hub.pingcap.net/keyspace/tiflash:v7.5.0 \
          --amend hub.pingcap.net/sunxiaoguang/serverless/tiflash:${{ github.sha }}-amd64 \
          --amend hub.pingcap.net/sunxiaoguang/serverless/tiflash:${{ github.sha }}-arm64

          docker manifest push hub.pingcap.net/keyspace/tiflash:v7.5.0
      - name: Update CN image to track this version
        if: ${{ inputs.update_cn_image }}
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: update-image-version.yaml
          repo: tidbcloud/tiflash-autoscale-supervisor
          ref: refs/heads/main
          token: ${{ secrets.GIT_ACTION_BOT }}
          inputs: '{ "commit": "${{ github.sha }}", "extra_assignee": "${{ github.actor }}", "extra_url": "${{github.server_url}}/${{ github.repository }}/actions/runs/${{ github.run_id }}" }'
